trigger:
 branches:
   include:
     - main
pool:
  vmImage: ubuntu-latest
variables:
  node_version: '20.x'
  sonar_project_key: 'user-managment_user-managment-fe'
  sonar_org: 'user-managment'
  sonar_token: '1282df0f8e319fc9cfd505e03f75fe116d0b9373'
steps:
  - task: NodeTool@0
    inputs:
      versionSpec: $(node_version)
    displayName: 'Use Node.js $(node_version)'

  - script: |
      cd api
      npm ci
    displayName: 'Install dependencies'

  - script: |
      cd api
      npm run lint
    displayName: 'Run linting'

  - script: |
      cd api
      npm test
    displayName: 'Run tests'

  - task: SonarCloudPrepare@1
    inputs:
      SonarCloud: 'SonarCloud-ServiceConnection'
      organization: $(sonar_org)
      scannerMode: 'CLI'
      configMode: 'manual'
      cliProjectKey: $(sonar_project_key)
      cliProjectName: 'API Service'
      extraProperties: |
        sonar.sources=.
        sonar.tests=.
        sonar.test.inclusions=**/*.test.js
        sonar.javascript.lcov.reportPaths=coverage/lcov.info
    displayName: 'Prepare Sonar analysis'

  - script: |
      cd api
      npm run build
    displayName: 'Build backend'

  - task: SonarCloudAnalyze@1
    displayName: 'Run Sonar analysis'

  - task: SonarCloudPublish@1
    displayName: 'Publish Sonar results'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: 'api/dist'
      ArtifactName: 'api-build'
    displayName: 'Publish API build artifact'